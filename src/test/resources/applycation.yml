path: {{#boundedContext}}{{nameCamelCase}}{{/boundedContext}}/src/test/resources
except: {{#attached "Event" this}}{{#checkOutgoing outgoingRelations}}{{/checkOutgoing}}{{/attached}}
---
server:
  port: 8080

## {{#attached "Event" this}}{{#outgoingRelations}}{{#target}}{{#attached "Aggregate" this}}{{nameCamelCase}}{{/attached}}{{/target}}{{/outgoingRelations}}{{/attached}} 정보가 필요하다.
## checkStock 를 true 로 준다면, {{#attached "Event" this}}{{#outgoingRelations}}{{#target}}{{#attached "Aggregate" this}}{{nameCamelCase}}{{/attached}}{{/target}}{{/outgoingRelations}}{{/attached}} 서비스가 죽어있을때는 주문이 안된다.
checkStock: true
---
spring:
  profiles:
    active: test
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${spring.embedded.kafka.brokers}
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: {{#aggregates}}{{namePlural}}{{/aggregates}}
          destination: eventTopicDocker
          contentType: application/json
        event-out:
          destination: eventTopicDocker
          contentType: application/json

api:
  url:
    {{#attached "Event" this}}{{#outgoingRelations}}{{#target}}{{#attached "Aggregate" this}}{{nameCamelCase}}{{/attached}}{{/target}}{{/outgoingRelations}}{{/attached}}: "http://localhost:8090"

<function>
    window.$HandleBars.registerHelper('checkOutgoing', function (relation) {
        if(!relation) return true;
    })
</function>