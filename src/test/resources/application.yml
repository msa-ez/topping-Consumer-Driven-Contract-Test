fileName: application.yml
except: {{#aggregates}}{{#checkCommand commands policyList}}{{/checkCommand}}{{/aggregates}}
---
server:
  port: 8080

checkStock: true
---
spring:
  profiles:
    active: test
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${spring.embedded.kafka.brokers}
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: {{#aggregates}}{{namePlural}}{{/aggregates}}
          destination: eventTopicDocker
          contentType: application/json
        event-out:
          destination: eventTopicDocker
          contentType: application/json

api:
  url:
    {{#if relationCommandInfo}}{{#relationCommandInfo}}{{#if targetAggregate}}{{targetAggregate.aggregate.nameCamelCase}}{{else}}{{commandValue.aggregate.nameCamelCase}}{{/if}}{{/relationCommandInfo}}{{else}}{{#attached "Event" this}}{{#outgoingRelations}}{{#target}}{{#aggregateList}}{{nameCamelCase}}{{/aggregateList}}{{/target}}{{/outgoingRelations}}{{/attached}}{{/if}}: "http://localhost:8090"

<function>
  window.$HandleBars.registerHelper('checkCommand', function (command, policy) {
    if(command){
      for(var i = 0; i < command.length; i++){
        if(command[i].examples){
          return false; 
        }
      }
    }else if(policy){
      return true;
    }
  })
</function>