fileName: application.yml
except: {{#aggregates}}{{#checkCommand events}}{{/checkCommand}}{{/aggregates}}
---
server:
  port: 8080

checkStock: true
---
spring:
  profiles:
    active: test
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${spring.embedded.kafka.brokers}
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: {{#aggregates}}{{namePlural}}{{/aggregates}}
          destination: eventTopicDocker
          contentType: application/json
        event-out:
          destination: eventTopicDocker
          contentType: application/json

api:
  url:
    {{#if relationCommandInfo}}{{#relationCommandInfo}}{{#if targetAggregate}}{{targetAggregate.aggregate.nameCamelCase}}{{else}}{{commandValue.aggregate.nameCamelCase}}{{/if}}{{/relationCommandInfo}}{{else}}{{#attached "Event" this}}{{#outgoingRelations}}{{#target}}{{#aggregateList}}{{nameCamelCase}}{{/aggregateList}}{{/target}}{{/outgoingRelations}}{{/attached}}{{/if}}: "http://localhost:8090"

<function>
window.$HandleBars.registerHelper('checkCommand', function (events) {
  if(events){
    for(var i = 0 ; i < events.length; i++){
      if(events[i].outgoingRelations){
        return false;
      } else{
        return true;
      }
    }
  } else{
    return true;
  }
});
</function>